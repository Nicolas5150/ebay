import fetchAndReturn from "../../utils/fetchAndReturn";

// https://developers.giphy.com/dashboard/ -> "Create an App" -> add in API key.
static const APIKEY = "_Enter API here_";

class {
  onCreate() {
    this.state = {
      inputVal: "",
      giphyURL: "https://api.giphy.com/v1/gifs/search",
      data: false,
    };
  }

  async buttonClick(event) {
    const createFinalURL = () => {
      const finalUrl = new URL(this.state.giphyURL);
      finalUrl.searchParams.set("api_key", APIKEY);
      finalUrl.searchParams.set("q", this.state.inputVal);
      finalUrl.searchParams.set("limit", "10");
      finalUrl.searchParams.set("rating", "g");
      finalUrl.searchParams.set("lang", "en");
      return finalUrl;
    };

    const data = await fetchAndReturn(createFinalURL());
    this.state.data = data.data;
  }

  inputChange(obj) {
    this.state.inputVal = obj.value;
  }
}
<div.search-bar-outer>
  <div.search-bar-inner>
    <input-comp
        type="search"
        id="giphy-searchbar"
        hidden=true
        labelText="Giphy search"
        placeholder="Search"
        value=state.inputVal
        on-input-change("inputChange")
      />
      <button-comp text="search" on-button-click("buttonClick")/>
  </div>
</div>

<if(state.data === null)>
  <div>Error with search</div>
</if>
<else-if(state.data)>
  <list-comp data=state.data/>
</else-if>

style {
  .search-bar-outer {
    background: white;
    box-shadow: 1px 1px 3px var(--color-gray-med);
    display: flex;
    flex-grow: 1;
    padding: var( --spacing-size-base) 0px;
    position: sticky;
    transition: width .5s linear;
    top: 0;
    width: 100%;
    z-index: 3;
  }

  .search-bar-inner {
    display: flex;
    margin: auto;
    width: 500px;
  }

  @media screen and (max-width: 992px) {
    .search-bar-inner {
      padding: 0px var( --spacing-size-base);
      width: 100%;
    }
  }
}
